{"ast":null,"code":"export function validation(values) {\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  //singupconst password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\n\n  let errors = {};\n  if (values.firstName === \"\") {\n    errors.firstName = \"First name should not be empty\";\n  } else {\n    errors.firstName = \"\";\n  }\n  if (values.lastName === \"\") {\n    errors.lastName = \"Last name should not be empty\";\n  } else {\n    errors.lastName = \"\";\n  }\n  if (values.country === \"\") {\n    errors.country = \"Country should not be empty\";\n  } else {\n    errors.country = \"\";\n  }\n  if (values.passport === \"\") {\n    errors.passport = \"Passport should not be empty\";\n  } else {\n    errors.passport = \"\";\n  }\n  if (values.email === \"\") {\n    errors.email = \"Email shoud not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    errors.email = \"email didn't match\";\n  } else {\n    errors.email = \"\";\n  }\n  if (values.password === \"\") {\n    errors.password = \"password shoud not be emptyy\";\n  } else if (values.password2 !== values.password) {\n    errors.password = \"password incorrect\";\n  } else {\n    errors.password = \"\";\n  }\n  if (values.password2 === \"\") {\n    errors.password2 = \"password shoud not be emptyy\";\n  } else if (values.password2 !== values.password) {\n    errors.password2 = \"password incorrect\";\n  } else {\n    errors.password2 = \"\";\n  }\n  return errors;\n}\nexport default validation;","map":{"version":3,"names":["validation","values","email_pattern","errors","firstName","lastName","country","passport","email","test","password","password2"],"sources":["C:/Users/Adam/Documents/GitHub/login/frontend/src/Singvalidation.js"],"sourcesContent":["export function validation(values) {\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    //singupconst password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\r\n\r\n    let errors = {};\r\n    if (values.firstName ===\"\") {\r\n        errors.firstName = \"First name should not be empty\";\r\n    }\r\n    else{\r\n        errors.firstName =\"\";\r\n    }\r\n\r\n    if (values.lastName ===\"\") {\r\n        errors.lastName = \"Last name should not be empty\";\r\n    }\r\n    else{\r\n        errors.lastName =\"\";\r\n    }\r\n\r\n    if (values.country ===\"\") {\r\n        errors.country = \"Country should not be empty\";\r\n    }\r\n    else{\r\n        errors.country =\"\";\r\n    }\r\n\r\n    if (values.passport ===\"\") {\r\n        errors.passport = \"Passport should not be empty\";\r\n    }\r\n    else{\r\n        errors.passport =\"\";\r\n    }\r\n   \r\n    \r\n    if (values.email ===\"\") {\r\n        errors.email = \"Email shoud not be empty\";\r\n    }\r\n    else if (!email_pattern.test(values.email)) {\r\n        errors.email = \"email didn't match\";\r\n    }\r\n    else{\r\n        errors.email =\"\";\r\n    }\r\n    if (values.password ===\"\") {\r\n        errors.password = \"password shoud not be emptyy\";\r\n    }\r\n   \r\n   else if (values.password2 !== values.password){\r\n        errors.password = \"password incorrect\";}\r\n    else{\r\n        errors.password =\"\";\r\n    }\r\n    if (values.password2 ===\"\") {\r\n        errors.password2 = \"password shoud not be emptyy\";\r\n    }\r\n\r\n    else if (values.password2 !== values.password){\r\n        errors.password2 = \"password incorrect\";}\r\n    else{\r\n        errors.password2 =\"\";\r\n    }\r\n\r\n  \r\n\r\n\r\n  \r\n    return errors;\r\n}\r\nexport default validation;\r\n"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,MAAM,EAAE;EAC/B,MAAMC,aAAa,GAAG,4BAA4B;EAClD;;EAEA,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAIF,MAAM,CAACG,SAAS,KAAI,EAAE,EAAE;IACxBD,MAAM,CAACC,SAAS,GAAG,gCAAgC;EACvD,CAAC,MACG;IACAD,MAAM,CAACC,SAAS,GAAE,EAAE;EACxB;EAEA,IAAIH,MAAM,CAACI,QAAQ,KAAI,EAAE,EAAE;IACvBF,MAAM,CAACE,QAAQ,GAAG,+BAA+B;EACrD,CAAC,MACG;IACAF,MAAM,CAACE,QAAQ,GAAE,EAAE;EACvB;EAEA,IAAIJ,MAAM,CAACK,OAAO,KAAI,EAAE,EAAE;IACtBH,MAAM,CAACG,OAAO,GAAG,6BAA6B;EAClD,CAAC,MACG;IACAH,MAAM,CAACG,OAAO,GAAE,EAAE;EACtB;EAEA,IAAIL,MAAM,CAACM,QAAQ,KAAI,EAAE,EAAE;IACvBJ,MAAM,CAACI,QAAQ,GAAG,8BAA8B;EACpD,CAAC,MACG;IACAJ,MAAM,CAACI,QAAQ,GAAE,EAAE;EACvB;EAGA,IAAIN,MAAM,CAACO,KAAK,KAAI,EAAE,EAAE;IACpBL,MAAM,CAACK,KAAK,GAAG,0BAA0B;EAC7C,CAAC,MACI,IAAI,CAACN,aAAa,CAACO,IAAI,CAACR,MAAM,CAACO,KAAK,CAAC,EAAE;IACxCL,MAAM,CAACK,KAAK,GAAG,oBAAoB;EACvC,CAAC,MACG;IACAL,MAAM,CAACK,KAAK,GAAE,EAAE;EACpB;EACA,IAAIP,MAAM,CAACS,QAAQ,KAAI,EAAE,EAAE;IACvBP,MAAM,CAACO,QAAQ,GAAG,8BAA8B;EACpD,CAAC,MAEG,IAAIT,MAAM,CAACU,SAAS,KAAKV,MAAM,CAACS,QAAQ,EAAC;IACzCP,MAAM,CAACO,QAAQ,GAAG,oBAAoB;EAAC,CAAC,MACxC;IACAP,MAAM,CAACO,QAAQ,GAAE,EAAE;EACvB;EACA,IAAIT,MAAM,CAACU,SAAS,KAAI,EAAE,EAAE;IACxBR,MAAM,CAACQ,SAAS,GAAG,8BAA8B;EACrD,CAAC,MAEI,IAAIV,MAAM,CAACU,SAAS,KAAKV,MAAM,CAACS,QAAQ,EAAC;IAC1CP,MAAM,CAACQ,SAAS,GAAG,oBAAoB;EAAC,CAAC,MACzC;IACAR,MAAM,CAACQ,SAAS,GAAE,EAAE;EACxB;EAMA,OAAOR,MAAM;AACjB;AACA,eAAeH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}